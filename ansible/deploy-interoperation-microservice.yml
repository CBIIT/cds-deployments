- name: deploy interoperation microservice
  hosts: all
  connection: local
  gather_facts: true

  tasks:
    #install collections
    - name: install aws collection
      shell: "ansible-galaxy collection install {{ item | quote }} --force"
      loop:
        - amazon.aws
        # - community.aws
        - git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,v1.0


    #docker login
    - name: docker login
      include_role:
        name: bento.common.ecr_login
      vars:
        region: us-east-1

    - name: Get the current caller identity information
      aws_caller_info:
      register: caller_info

    - name: Get ECR account
      set_fact:
        account: "{{ caller_info.account }}"
        region: us-east-1
        ecr_central_account_id: "{{ lookup('amazon.aws.aws_secret', 'ecr.central_account_id', nested=true, region='us-east-1' ) }}"
    
    - name: set ECR registry name
      set_fact:
        ecr_repo: "{{ecr_central_account_id}}.dkr.ecr.{{ region }}.amazonaws.com"

    - name: set account number
      set_fact:
        account: "{{ caller_info.account }}"
    #deploy interoperation
    - name: deploy stage for {{ project }} interoperation
      include_role:
        #name: bento.common.ecs
        name: bento.common.ecs
      vars:
        service_name: "{{ project_name }}-{{ tier }}-interoperation"
        cloudfront_key_group_name: "{{ lookup('amazon.aws.aws_secret', 'cloudfront.key_group_name', nested=true, region='us-east-1' ) }}"
        cloudfront_origin_id: "{{ lookup('amazon.aws.aws_secret', 'cloudfront.origin_id', nested=true, region='us-east-1' ) }}"
        cloudfront_domain_name: "{{ lookup('amazon.aws.aws_secret', 'cloudfront.domain_name', nested=true, region='us-east-1' ) }}"
        cloudfront_key_group_id: "{{ lookup('amazon.aws.aws_secret', 'cloudfront.key_group_id', nested=true, region='us-east-1' ) }}"
        cloudfront_private_key: "{{ lookup('amazon.aws.aws_secret', 'cloudfront.privatekey', nested=true, region='us-east-1' ) | b64decode }}"
        ansible_python_interpreter: /usr/bin/python3
        execution_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-execution-role{% else %}{{ project_name }}-{{ tier }}-task-execution-role{% endif %}"
        task_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-role{% else %}{{ project_name }}-{{ tier }}-task-role{% endif %}"
        project_name: "{{project_name}}"
        project: "{{project_name}}"
        region: us-east-1
        container_name: "interoperation"
        interoperation_version: "{{ lookup('env','INTEROPERATION_VERSION') }}"
        image_version: "{{ interoperation_version}}"
        tier: "{{ tier }}"
        ecs_cluster_name: "{{ project_name }}-{{ tier }}-ecs"
        sumo_collector_endpoint: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_endpoint', nested=true, region='us-east-1' ) }}"
        sumo_collector_token: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_token_interoperation', nested=true, region='us-east-1' ) }}"
        container_port: "4030"
        container_memory: "2048"
        container_cpu: "1024"
        container_image_url: "{{ ecr_repo }}/crdc-{{ project_name }}-{{ container_name }}"
        url_src: CLOUD_FRONT
        auth_enabled: "false"
        newrelic_license_key: "{{ lookup('amazon.aws.aws_secret', 'monitoring/newrelic.api_key', nested=true, region='us-east-1' ) }}"
        cookie_secret: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/google.cookie_secret', nested=true, region='us-east-1' ) }}"
        container_env:
        - name: VERSION
          value: "{{interoperation_version}}"
        - name: DATE
          value: "{{ansible_date_time.date}}"
        - name: PROJECT
          value: "{{project_name}}"
        - name: CLOUDFRONT_DOMAIN
          value: https://{{cloudfront_domain_name}}
        - name: CLOUDFRONT_PRIVATE_KEY
          value: "{{cloudfront_private_key}}"
        - name: CLOUDFRONT_KEY_PAIR_ID
          value: "{{cloudfront_key_group_id}}"
        - name: BENTO_BACKEND_GRAPHQL_URI
          value: "{% if tier == 'prod'  and project_name == 'bento' %}https://{{domain_name}}/v1/graphql/{% elif tier == 'prod' %}https://{{subdomain}}.{{domain_name}}/v1/graphql/{% else %}https://{{subdomain}}-{{tier}}.{{domain_name}}/v1/graphql/{% endif %}"
        - name: NEW_RELIC_LICENSE_KEY
          value: "{{ newrelic_license_key }}"
        - name: NEW_RELIC_APP_NAME
          value: "{{project_name}}-{{tier}}-interoperation-{{ansible_hostname}}"
        - name: REDIS_HOST
          value: localhost
        - name: REDIS_PORT
          value: 6001
        - name: SIGNED_URL_EXPIRY_SECONDS
          value: 8664
        - name: S3_SECRET_ACCESS_KEY
          value: "akdkddkdkdkdkd"
        - name: S3_ACCESS_KEY_ID
          value: "akdkdkdkdkdkkd"
        - name: FILE_MANIFEST_BUCKET_NAME
          value: "cds-nonprod-metadata"