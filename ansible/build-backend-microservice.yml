- name: build backend microservice
  hosts: all
  gather_facts: no
  connection: local
  become: yes

  tasks:
    - debug: var=ansible_python_version
    #install collections
    - name: install aws collection
      command: ansible-galaxy collection install {{item}}
      loop:
        - community.docker
        - amazon.aws
        - community.aws:<=3.2.0
        - git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,bento-ref

    - name: Get the current caller identity information
      aws_caller_info:
      register: caller_info

    - name: Get ECR account
      set_fact:
        account: "{{ caller_info.account }}"
        region: us-east-1
        ecr_central_account_id: "{{ lookup('amazon.aws.aws_secret', 'ecr.central_account_id', nested=true, region='us-east-1' ) }}"
    
    - name: set ECR registry name
      set_fact:
        ecr_repo: "{{ecr_central_account_id}}.dkr.ecr.{{ region }}.amazonaws.com"

    #docker login
    - name: login into ecr
      shell: "docker login -u AWS -p $(aws ecr get-login-password --region {{ region }}) {{ ecr_repo }}"
      ignore_errors: True
      register: ecr_login

    # - debug:
    #   msg: "{{ecr_login}}"


    #build backend
    - name: build {{project_name}} backend
      include_role:
        name: bento.common.build_backend
      vars:
        ansible_python_interpreter: /usr/bin/python3
        workspace: "{{ lookup('env','WORKSPACE') }}"
        build_number: "{{ lookup('env','BUILD_NUMBER')}}"
        project_name: "{{project_prefix}}"
        project: "cds"
        image_version: "{{ lookup('env','BE_VERSION') }}"
        tier: "{{ tier }}"
        bento_api_version: "{{ image_version }}"
        container_name: "backend"
        schema_file: "{%if project_name == 'bento' %}cds-extended.graphql{% else %}cds.graphql{% endif %}"
        es_schema_file: "cds-private-es-schema.graphql"
        public_schema_file: "{%if project_name == 'bento' %}{{ project_name }}-extended-public.graphql{% else %}cds-public.graphql{% endif %}"
        public_es_schema_file: "cds-public-es-schema.graphql"
        es_host: "{{ lookup('amazon.aws.aws_secret', 'bento/cds/{{ tier }}.es_host', nested=true, region='us-east-1' ) }}"
        test_queries_file: "not_needed.txt"
        dockerfile_path: "{{workspace}}"
        container_image: "{{ ecr_repo }}/{{ project_name }}-{{ container_name }}:{{ image_version }}"
        container_registry_url: "{{ ecr_repo }}"
        auth_enabled: "true"