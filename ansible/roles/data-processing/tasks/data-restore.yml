---
- name: ensure backup directory exists
  file:
    path: "{{ backup_directory}}"
    state: directory
    owner: neo4j
    group: neo4j

- name: remove existing backup file
  ansible.builtin.file:
    path: "{{backup_directory}}/neo4j.dump"
    state: absent

- name: copy dump to neo4j instance
  ansible.builtin.copy:
    src:  "/tmp/neo4j_dump.dump"
    dest: "{{backup_directory}}/neo4j.dump"
    owner: neo4j
    group: neo4j
    mode: '0644'
  register: download_result

- name: Ensure Neo4j is stopped
  service:
    name: neo4j
    state: stopped
  when: download_result.changed  

- name: Restore Neo4j dump
  command: neo4j-admin load --from={{backup_directory}}/neo4j.dump --database=neo4j --force
  register: neo4j_restore_result
  when: download_result.changed  

- name: Ensure Neo4j is started
  service:
    name: neo4j
    state: started
  when: download_result.changed 

- name: Print restore status
  debug:
    msg: "Neo4j restore status: {{ neo4j_restore_result.stdout }}"
  when: download_result.changed  
